services:

  web:
    build: requirements/web/.
    container_name: web
    image: web
    volumes:
      - ./requirements/web/volume:/website
    ports:
      - '8000'
    depends_on:
      - vault
      - postgres
    environment:
      - DEBUG=True
    env_file : 
      - ./secrets/.django_token
    networks:
      - transcendance

  postgres:
    build: requirements/postgres/.
    image: postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file : 
      - ./secrets/.postgres_token
    ports:
      - '5432'
    networks:
      - transcendance
    depends_on:
      - vault

  prometheus:
    build: requirements/prometheus/.
    container_name: prometheus
    image: prometheus
    ports:
      - '9090'
    restart: always
    networks:
      - transcendance
    depends_on:
      - vault

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - transcendance

  vault :
      container_name : 'vault'
      build : ./requirements/vault/.
      image: 'vault'
      cap_add:
          - IPC_LOCK
      ports:
          - '8200'
      networks:
          - transcendance
      restart: on-failure:10
      env_file : 
          - ./secrets/.vault_tokens
      volumes:
        - vault_data:/vault/data

  apache:
      container_name: 'apache'
      build : ./requirements/apache/.
      image: 'apache'
      ports:
        - '80'
        - '443:443'
      volumes:
        - ./requirements/apache/volume:/app
      networks:
        - transcendance
      depends_on:
        - vault

volumes:
  postgres_data:
      name : postgres_data
      driver: local
      driver_opts:
          type: 'none'
          o: 'bind'
          device: '../postgres_data/'
  vault_data:
      name : vault_data
      driver: local
      driver_opts:
          type: 'none'
          o: 'bind'
          device: '../vault_data/'

networks:
  transcendance:
    driver: bridge
 

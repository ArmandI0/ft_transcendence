services:

  # frontend:
  #   build: requirements/frontend  # RÃ©pertoire contenant le Dockerfile pour le frontend
  #   volumes:
  #     - ./requirements/frontend/volume:/usr/share/nginx/html
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - database
  #   networks:
  #     - transcendance

  frontend:
    image: 'bitnami/apache:latest'
    ports:
      - '8080:8080'
      - '443:8443'
    volumes:
      - ./requirements/frontend/volume:/app
    depends_on:
      - database
    networks:
      - transcendance

  web:
    build: requirements/web/.
    volumes:
      - ./requirements/web/volume:/website
    ports:
      - "8000:8000"
    depends_on:
      - database
    environment:
      - DEBUG=True
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=mydatabase
      - DJANGO_DB_USER=mydatabaseuser
      - DJANGO_DB_PASSWORD=mypassword
    networks:
      - transcendance

  database:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: mydatabaseuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    networks:
      - transcendance

  prometheus:
    build: requirements/prometheus/.
    container_name: prometheus
    image: prometheus
    ports:
      - "9090:9090"
    restart: always
    networks:
      - transcendance

  adminer:
    image: adminer
    restart: always
    ports:
      - 8085:8080
    networks:
      - transcendance

volumes:
  postgres_data:


networks:
  transcendance:
    driver: bridge
 
